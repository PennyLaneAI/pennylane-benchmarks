name: PennyLane Benchmarks
on:
  schedule:
    - cron: "41 5 * * 0-6"  # Run daily at 0am
  pull_request:

concurrency:
  group: pennylane-benchmarks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # call_pennylane_benchmarks:
  #   uses: PennyLaneAI/pennylane/.github/workflows/benchmarks.yml@master
  #   with:
  #     branch: master

  get_head_commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pennylane reference branch
        uses: actions/checkout@v3
        with:
          repository: PennyLaneAI/pennylane
          ref: add-pytest-benchmarks

      - name: Query the benchmark reference branch head commit
        id: query_ref_head_commit
        run: |
          echo "head_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Checkout pennylane benchmarked branch
        uses: actions/checkout@v3
        with:
          repository: PennyLaneAI/pennylane
          ref: master

      - name: Query the benchmarked branch head commit
        id: query_head_commit
        run: |
          echo "head_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    outputs:
      ref_head_commit: ${{ steps.query_ref_head_commit.outputs.head_commit }}
      head_commit: ${{ steps.query_head_commit.outputs.head_commit }}


  update_benchmark_data:
    needs: [get_head_commits]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pennylane-benchmarks
        uses: actions/checkout@v3
        with:
          ref: update_pennylane_benchmarks #change to main before merge

      - uses: actions/download-artifact@v3
        with:
          path: pennylane_benchmarks

      - run: python -m pip install mdutils

      - name: update README file
        run: |
          python .github/workflows/scripts/generate_md.py --last_update $(date +'%Y-%m-%d') --pl_ref_commit ${{ fromJson(needs.get_head_commits.outputs.ref_head_commit) }} --pl_commit ${{ fromJson(needs.get_head_commits.outputs.head_commit) }}

      - name: Commit and push changes
        if:
        run: |
          if [[ -n $(git status -s) ]]; then
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git config --global user.name "Benchmarks update bot"
            git add .
            git commit -m 'Auto update benchmark data'
            git push
          fi
